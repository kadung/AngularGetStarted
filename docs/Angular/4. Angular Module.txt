Ref:
    1. 

----------------------------------------------------------------------------------------------------
    Angular module
----------------------------------------------------------------------------------------------------
+ Angular module is a class with an NgModule decorator use to:
    - Organize and arrange the application into cohesive blocks of functionality
    - Extend the application with capabilities from external library
    - Provide the environment for resolving the directive pipes in components's templates 

+ An Angular application has at least one Angular module called root application module or AppModule, 
and at least one Angular component called the root application component or AppComponent.


----------------------------------------------------------------------------------------------------
    Bootstraps Array
----------------------------------------------------------------------------------------------------
+ The Bootstraps array of the NgModule decorator defines the component that is the starting point of
the application. This is the component that provides the directive used in index.html when the 
application is launched.

+ Every application must bootstrap at least one component, the root application component by adding
the component in bootstrap array of root application module.

+ The bootstrap array should only be used in the root application module aka AppModule.


----------------------------------------------------------------------------------------------------
    Delarations Array
---------------------------------------------------------------------------------------------------- 
+ The Delarations array of the NgModule decorator defines the components, directives, and pipes that
is created by us and used in this Angular application.

+ Every components, directives and pipes which is created by us must belong to one and only one
Angular module. 

+ Never add any other classes, services or modules to delaration array.

+ All components, directives and pipes are private by default, they are only accessible to other 
components, directives and pipes declared in the same module. If you want to use it across multiple
module, use export array.


----------------------------------------------------------------------------------------------------
    Exports Array
----------------------------------------------------------------------------------------------------
+ The Exports array of the ngModule decorator allows us to share an Angular module's components, 
directives and pipes with other modules. Other modules can use any thing inside export array when 
they import that module.

+ A module can export @angular module, 3rd party module, and itself.

+ When a module exports itself, it will export all components, directives, and pipes inside it. This 
is useful when consolidating features for multiple modules to build a shared module.

+ We can add anything to export array without importing it first. An Angular module only needs to 
import components, directives, and pipes that are required by the components declared in the module
. For example, a ShareModule exports the FormModule even though it did not import it, so any
module that import ShareModule will have access to the ngModel and other form directives

+ Never export a service 


----------------------------------------------------------------------------------------------------
    Imports Array
----------------------------------------------------------------------------------------------------
+ An Angular module can be extended by importing capabilities from other Angular module. The Imports 
array of the ngModule decorator allows to import supporting modules that export